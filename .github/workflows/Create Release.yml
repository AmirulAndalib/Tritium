name:  Release

on:
  push:
    branches:
      - main 

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Prepare Configuration
      run: |
        CONFIG_ENV=$(cat config.env | grep -w "CONFIG_ENV" | head -n 1 | cut -d "=" -f 2)
        echo "MODULE_PACKAGING_PATH=$(cat $CONFIG_ENV | grep -w "MODULE_PACKAGING_PATHE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "ZIP_FILENAME=$(cat $CONFIG_ENV | grep -w "ZIP_FILENAME" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CONFIG_PATH=$(cat $CONFIG_ENV | grep -w "CONFIG_PATH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CONFIG_NAM=$(cat $CONFIG_ENV | grep -w "CONFIG_NAM" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "IS_PRERELEASE=$(cat $CONFIG_ENV | grep -w "IS_PRERELEASE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "VERSION=$(cat $CONFIG_ENV | grep -w "VERSION" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "RELEASE_NOTES=$(cat $CONFIG_ENV | grep -w "RELEASE_NOTES" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
    
      # 压缩打包文件
    - name: Zip Module
      run: |
        cd $GITHUB_WORKSPACE/magisk
        zip -r $GITHUB_WORKSPACE/$ZIP_FILENAME ./*
        cd configs
        zip -r $GITHUB_WORKSPACE/$CONFIG_NAME ./*


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token 访问权限
      with:
        tag_name: ${{ env.VERSION }} # 发布的版本号
        release_name: Tritium_${{ env.VERSION }}  # 发布名称，可以根据需要修改
        body: |
           Tritium_${{ env.RELEASE_NOTES }}  # 发布说明，可以根据需要修改
        draft: false  # 是否作为草稿发布
        prerelease: ${{ env.IS_PRERELEASE }}  # 是否为预发布版本

    - name: Upload Release Assets
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $GITHUB_WORKSPACE/$ZIP_FILENAME.zip
        asset_name: ${{ env.ZIP_FILENAME }}.zip
        asset_content_type: application/zip

    - name: Upload Another Release Asset
      id: upload_another_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $GITHUB_WORKSPACE/CONFIG_NAME.zip
        asset_name: ${{ env.CONFIG_NAME }}.zip
        asset_content_type: application/zip
   
          