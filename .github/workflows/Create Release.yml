name:  Release

on:
  push:
    branches:
      - main 

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Prepare Configuration
      run: |
        CONFIG_ENV=$(cat config.env | grep -w "CONFIG_ENV" | head -n 1 | cut -d "=" -f 2)
        echo "MODULE_PACKAGING_PATH=$(cat $CONFIG_ENV | grep -w "MODULE_PACKAGING_PATHE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "ZIP_FILENAME=$(cat $CONFIG_ENV | grep -w "ZIP_FILENAME" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CONFIG_PATH=$(cat $CONFIG_ENV | grep -w "CONFIG_PATH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CONFIG_NAM=$(cat $CONFIG_ENV | grep -w "CONFIG_NAM" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "IS_PRERELEASE=$(cat $CONFIG_ENV | grep -w "IS_PRERELEASE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "VERSION=$(cat $CONFIG_ENV | grep -w "VERSION" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "RELEASE_NOTES=$(cat $CONFIG_ENV | grep -w "RELEASE_NOTES" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
    
      # 压缩打包文件
    - name: Zip Module
      run: |
        cd $GITHUB_WORKSPACE/magisk
        zip -r $GITHUB_WORKSPACE/$ZIP_FILENAME ./*
        cd configs
        zip -r $GITHUB_WORKSPACE/$CONFIG_NAME ./*

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        name: $VERSION
        prerelease: ${{ env.IS_PRERELEASE }}
        body: ${{ env.RELEASE_NOTES }}

        files: $GITHUB_WORKSPACE/$ZIP_FILENAME.zip,$GITHUB_WORKSPACE/$CONFIG_NAME.zip
        repository: NightRainMilkyWay/Tritium
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }} 

    