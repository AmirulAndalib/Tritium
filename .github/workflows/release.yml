name: Build and Release

on:
  push:
    branches:
      - main # 或者是你的默认分支名称

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Read config file
      id: config
      run: |
        echo "::set-output name=SOURCE_DIR::$(cat config | jq -r '.source_dir')"
        echo "::set-output name=EXCLUDE::$(cat config | jq -r '.exclude')"
        echo "::set-output name=ZIP_NAME::$(cat config | jq -r '.zip_name')"
        echo "::set-output name=IS_PRERELEASE::$(cat config | jq -r '.is_prerelease')"
        echo "::set-output name=RELEASE_VERSION::$(cat config | jq -r '.release_version')"
        echo "::set-output name=RELEASE_NOTES::$(cat config | jq -r '.release_notes')"

    - name: Setup jq
      run: sudo apt-get install -y jq

    - name: Build ZIP file
      run: |
        SOURCE_DIR="${{ steps.config.outputs.SOURCE_DIR }}"
        EXCLUDE="${{ steps.config.outputs.EXCLUDE }}"
        ZIP_NAME="${{ steps.config.outputs.ZIP_NAME }}"
        find $SOURCE_DIR \( $(echo $EXCLUDE | jq -r '.[]') -type d -print \) -prune -o -type f -print0 | xargs -0 zip -@r $ZIP_NAME

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.config.outputs.RELEASE_VERSION }}
        release_name: Release ${{ steps.config.outputs.RELEASE_VERSION }}
        body: ${{ steps.config.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: ${{ steps.config.outputs.IS_PRERELEASE }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.config.outputs.ZIP_NAME }}
        asset_name: ${{ steps.config.outputs.ZIP_NAME }}
        asset_content_type: application/zip